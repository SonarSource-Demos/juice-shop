name: Build

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  setup:
    name: Checkout and Install Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: "Install dependencies"
        run: npm ci # Only work with a lockfile

  unit_tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: setup
    
    steps:
      - name: "Run tests and generate lcov report"
        run: npm test
      - name: "Copy unit test coverage data"
        run: |
          mkdir -p coverage
          cp build/reports/coverage/frontend-tests/lcov.info ./coverage/frontend-lcov.info
          cp build/reports/coverage/server-tests/lcov.info ./coverage/server-lcov.info

  api_tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: setup
    
    steps:
      - name: "Run tests and generate lcov report for API"
        run: npm run frisby
      - name: "Copy unit test coverage data"
        run: |
          mkdir -p coverage
          cp build/reports/coverage/api-tests/lcov.info ./coverage/api-lcov.info

  sonar:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    needs: 
      - unit_tests
      - api_tests
    
    steps:
      - name: "SonarQube Scan"
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # We do not recommend to use this in a pull request. Prefer using pull request
      # decoration instead.
      # - uses: SonarSource/sonarqube-quality-gate-action@v1
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}